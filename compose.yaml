services:
  mongo:
    image: mongo
    restart: always
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - ./db_data/:/data/db/
    networks:
      - app-network
  backend-dev:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    volumes:
      - ./logs:/var/log/app
    ports:
      - 4000:4000
    environment:
      - API_PORT:4000
      - DATABASE_URI=mongodb://mongo:27017/rideshare
      - WEB_URL=http://localhost:5173
      - ACCESS_TOKEN_SECRET=shreya
      - REFRESH_TOKEN_SECRET=shreya
      # - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318/v1/metrics
    depends_on:
      - mongo
      - otel-collector
      - prometheus
    networks:
      - app-network
  frontend-dev:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    environment:
      - WEB_PORT=5173
      - MAPBOX_ACCESS_TOKEN=pk.eyJ1Ijoic3VyYW15YWd1cHRhIiwiYSI6ImNtYzFyNzlnMzAwaDcycnNkd24xcHl0dG4ifQ.UQo-Ur07FCOGhjzxFt7ftQ
      - API_URL=http://localhost:4000
    depends_on:
      - backend-dev
    networks:
      - app-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - app-network
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib
    # command: ["--config=/etc/otelcol-contrib/config.yaml"]
    volumes:
      - ./otel-config.yaml:/etc/otelcol-contrib/config.yaml
      - ./logs:/var/log/app
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
      - 9464:9464 # Prometheus scrape
    depends_on:
      - loki
      - prometheus
      - tempo
    networks:
      - app-network
  loki:
    image: grafana/loki:main
    container_name: loki
    ports:
      - "3100:3100"
    # volumes:
    #   - ./loki-config.yaml:/etc/loki/local-config.yaml
    # command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app-network
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: ["-config.file=/etc/tempo.yaml"]
    user: "0:0"
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - tempo-data:/tmp/tempo
    ports:
      - "3200:3200" # Tempo HTTP port
    networks:
      - app-network
  # grafana:
  #   image: grafana/grafana-enterprise
  #   container_name: grafana
  #   ports:
  #     - "4000:3000"
  #   volumes:
  #     - grafana-storage:/var/lib/grafana
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   networks:
  #     - app-network
networks:
  app-network:
      driver: bridge
volumes:
  grafana-storage:
  tempo-data:
 









